{"version":3,"sources":["Components/state.tsx","Components/high&lowAsk.jsx","Components/high&lowBid.jsx","Components/ask_bid_high.jsx","Components/ask_bid_low.jsx","App.tsx","reportWebVitals.ts","Redux/action.ts","Redux/reducer.ts","Redux/index.ts","Redux/store.ts","Redux/middleware.ts","index.tsx"],"names":["Pp","styled","p","Div","div","Text","StateIcon","status","useSelector","state","webReducer","eventList","eventTime","errorMsg","style","color","width","height","display","HighLowAsk","highAsk","askPrice_max","lowAsk","askPrice_min","highLowAsks","labels","datasets","label","data","fill","borderColor","pointRadius","options","title","text","scales","tooltips","enabled","mode","position","hover","intersect","xAxes","ticks","callback","dataLabel","index","yAxes","scaleLabel","labelString","beginAtZero","HighLowBid","highBid","bidPrice_max","lowBid","bidPrice_min","highLowBids","HighAskBid","bidHigh","askHigh","maxs","backgroundColor","pointHoverRadius","showLine","elements","point","pointStyle","LowAskBid","bidLow","askLow","H1","h1","ChartDiv","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","buildConnection","createAction","connectSuccess","connectFail","createReducer","list","asks","bids","type","console","log","action","payload","date","Date","toLocaleTimeString","valid_ask","filter","a","valid_ask_price","i","length","push","max_ask_price","Math","max","min_ask_price","min","valid_bid","b","valid_bid_price","max_bid_price","min_bid_price","splice","rootReducer","combineReducers","store","configureStore","reducer","middleware","next","toString","ws","WebSocket","onopen","onmessage","e","JSON","parse","dispatch","onerror","event","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ac878ef.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { RootState } from \"../Redux\";\nimport { AiOutlineSmile, AiFillWarning,  AiOutlineFall, AiOutlineSchedule } from \"react-icons/ai\";\nimport styled from \"styled-components\";\n\nconst Pp = styled.p`\n    color      : #DFDEE3;\n    font-family: Optima;\n    font-size  : 16px;\n    font-weight: 700;\n    display    : inline-block\n`\nconst Div = styled.div`\n    padding   : 0px 8px 0px 16px;\n    text-align: center`\n\nconst Text = styled.p`\n    color      : #B9CDE3;\n    font-family: Optima;\n    text-align : center\n`\n\nconst StateIcon = () => {\n\n    const status       = useSelector((state: RootState) => state.webReducer.status)\n    const eventList    = useSelector((state: RootState) => state.webReducer.eventTime)\n    const errorMessage = useSelector((state: RootState) => state.webReducer.errorMsg)\n  \n    \n    return(\n        <>\n        <Div>\n        {status? \n        (<> \n            <Pp> Connected! Websocket is working. &nbsp; </Pp>\n            <AiOutlineSmile style = {{color:'#0fd850', width: '28px', height: '28px', display:'inline-block'}} />\n         </>): \n         (<>\n            <Pp> Disconnected! Please refresh the page &nbsp; </Pp>\n            {/* {errorMessage!==null? <Text>{errorMessage}</Text> : null} */}\n            <AiFillWarning style = {{color:'#ff9569', width: '28px', height: '28px' , display:'inline-block'}} />\n         </>\n         )}\n        </Div>\n       \n        { eventList[60]? (<Text> <AiOutlineFall /> The data shows the real-time transactions of BinanceCoin BTC (BNB-BTC).\n        Time event <AiOutlineSchedule />  From  {eventList[0]} to {eventList[60]}. </Text>) : \n        ( <Text>  <AiOutlineFall /> The data shows the real-time transactions of BinanceCoin BTC (BNB-BTC).  </Text>)}\n       \n        </>\n    )\n}\n\nexport default StateIcon","import { useSelector } from \"react-redux\";\nimport { Line } from '@reactchartjs/react-chart.js'\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\n  width  : 700px;\n  padding: 30px 80px 60px 60px;\n`\n\nexport default function HighLowAsk () {\n\n    const highAsk   = useSelector((state) => state.webReducer.askPrice_max)\n    const lowAsk    = useSelector((state) => state.webReducer.askPrice_min)\n    const eventList = useSelector((state) => state.webReducer.eventTime)\n\n    const highLowAsks = {\n        labels  : eventList,\n        datasets: [\n          {\n            label      : '# Highest Ask Price',\n            data       : highAsk,\n            fill       : false,\n            borderColor: '#FEAB72',\n            pointRadius: 0,\n            fill       : false,\n            lineTension: 0,\n            borderWidth: 2\n          },\n          {\n            label      : '# Lowest Ask Price',\n            data       : lowAsk,\n            fill       : false,\n            borderColor: '#B0EBE7',\n            pointRadius: 0,\n            fill       : false,\n            lineTension: 0,\n            borderWidth: 2\n          },\n        ],\n    }\n\n    const options = {\n        title: {\n            display: true,\n            text   : 'High & low price of ask'\n          },\n        scales: {\n            tooltips: {\n                enabled : false,\n                mode    : 'index',\n                position: 'average',\n            },\n            hover: {\n                mode     : 'index',\n                intersect: true\n            },\n            xAxes: [{\n                ticks: {\n                    callback: (dataLabel, index) => {\n                    return index % 10 === 0 ? dataLabel : '';\n                }}\n                }],\n            yAxes: [{\n                scaleLabel: {\n                    display    : true,\n                    labelString: 'price (x0.001)',\n                    color      : '#F7F8F6'\n                },  \n                ticks: {\n                    beginAtZero: false,\n                },\n                },\n            ],\n        },\n      }\n\n    return(\n        <Div>\n         <Line data = {highLowAsks} options = {options} />\n        </Div>\n    )\n}","import { useSelector } from \"react-redux\";\nimport { Line } from '@reactchartjs/react-chart.js'\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\n  width  : 700px;\n  padding: 30px 30px 60px 10px;\n`\n\nexport default function HighLowBid () {\n\n    const highBid   = useSelector((state) => state.webReducer.bidPrice_max)\n    const lowBid    = useSelector((state) => state.webReducer.bidPrice_min)\n    const eventList = useSelector((state) => state.webReducer.eventTime)\n\n    const highLowBids = {\n        labels  : eventList,\n        datasets: [\n          {\n            label      : '# Highest Bid Price',\n            data       : highBid,\n            fill       : false,\n            borderColor: '#FA8079',\n            pointRadius: 0,\n            fill       : false,\n            lineTension: 0,\n            borderWidth: 2\n          },\n          {\n            label      : '# Lowest Bid Price',\n            data       : lowBid,\n            fill       : false,\n            borderColor: '#B1D1A6',\n            pointRadius: 0,\n            fill       : false,\n            lineTension: 0,\n            borderWidth: 2\n          },\n        ],\n    }\n\n    const options = {\n        title: {\n            display: true,\n            text   : 'High & low price of bids'\n          },\n        scales: {\n            tooltips: {\n                enabled : false,\n                mode    : 'index',\n                position: 'average',\n            },\n            hover: {\n                mode     : 'index',\n                intersect: true\n            },\n        xAxes: [{\n            ticks: {\n                callback: (dataLabel, index) => {\n                return index % 10 === 0 ? dataLabel : '';\n            }}\n            }],\n        yAxes: [\n            {\n              scaleLabel: {\n                display    : true,\n                labelString: 'price (x0.001)',\n                color      : '#F7F8F6'\n                },  \n              ticks: {\n                beginAtZero: false,\n              },\n            },\n          ],\n        },\n      }\n\n    return(\n        <Div>\n         <Line data = {highLowBids} options = {options} />\n        </Div>\n    )\n}","import { useSelector } from \"react-redux\";\nimport { Line } from '@reactchartjs/react-chart.js'\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\n  width  : 700px;\n  padding: 30px 30px 30px 60px;\n`\n\nexport default function HighAskBid () {\n\n    const bidHigh   = useSelector((state) => state.webReducer.bidPrice_max)\n    const askHigh   = useSelector((state) => state.webReducer.askPrice_max)\n    const eventList = useSelector((state) => state.webReducer.eventTime)\n\n    const maxs = {\n        labels  : eventList,\n        datasets: [\n          {\n            label           : '# Best Ask Price',\n            data            : askHigh,\n            fill            : false,\n            borderColor     : '#CFAFE2',\n            backgroundColor : '#CFAFE2',\n            pointRadius     : 5,\n            pointHoverRadius: 15,\n            showLine        : false                // no line shown\n          },\n          {\n            label           : '# Best Bid Price',\n            data            : bidHigh,\n            fill            : false,\n            borderColor     : '#FDE0A2',\n            pointRadius     : 0,\n            backgroundColor : '#FDE0A2',\n            pointRadius     : 5,\n            pointHoverRadius: 15,\n            showLine        : false                // no line shown\n          },\n        ],\n    }\n\n    const options = {\n      title: {\n        display: true,\n        text   : 'See the best prices here',\n      },\n      elements: {\n        point: {\n          pointStyle: 'rectRot',\n        }\n      },\n        scales: {\n            tooltips: {\n                enabled : false,\n                mode    : 'index',\n                position: 'average',\n            },\n            hover: {\n                mode     : 'index',\n                intersect: true\n        },\n        xAxes: [{\n              ticks: {\n                  callback: (dataLabel, index) => {\n                  return index % 10 === 0 ? dataLabel : '';\n              }}\n        }],\n        yAxes: [\n          {\n            scaleLabel: {\n              display    : true,\n              labelString: 'price (x0.001)',\n              color      : '#F7F8F6'\n              },  \n            ticks: {\n              beginAtZero: false,\n            },\n          },\n        ],\n      },\n      }\n\n    return(\n        <Div>\n         <Line data = {maxs} options = {options} />\n        </Div>\n    )\n}","import { useSelector } from \"react-redux\";\nimport { Line } from '@reactchartjs/react-chart.js'\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\n  width  : 700px;\n  padding: 30px 30px 30px 10px;\n`\n\nexport default function LowAskBid () {\n\n    const bidLow    = useSelector((state) => state.webReducer.bidPrice_min)\n    const askLow    = useSelector((state) => state.webReducer.askPrice_min)\n    const eventList = useSelector((state) => state.webReducer.eventTime)\n\n    const maxs = {\n        labels  : eventList,\n        datasets: [\n          {\n            label           : '# Lowest Ask Price',\n            data            : askLow,\n            fill            : false,\n            borderColor     : '#96C4D8',\n            backgroundColor : '#B2D0EB',\n            pointRadius     : 5,\n            pointHoverRadius: 15,\n            showLine        : false                  // no line shown\n          },\n          {\n            label           : '# Lowest Bid Price',\n            data            : bidLow,\n            fill            : false,\n            borderColor     : '#DF6C7E',\n            pointRadius     : 0,\n            backgroundColor : '#FBB1B5',\n            pointRadius     : 5,\n            pointHoverRadius: 15,\n            showLine        : false                  // no line shown\n          },\n        ],\n    }\n\n    const options = {\n        title: {\n            display: true,\n            text   : 'See the lowest price here'\n          },\n      elements: {\n        point: {\n          pointStyle: 'triangle',\n        }\n      },\n        scales: {\n            tooltips: {\n                enabled : false,\n                mode    : 'index',\n                position: 'average',\n            },\n            hover: {\n                mode     : 'index',\n                intersect: true\n        },\n        xAxes: [{\n              ticks: {\n                  callback: (dataLabel, index) => {\n                  return index % 10 === 0 ? dataLabel : '';\n              }}\n        }],\n        yAxes: [\n          {\n            scaleLabel: {\n              display    : true,\n              labelString: 'price (x0.001)',\n              color      : '#F7F8F6'\n              },  \n            ticks: {\n              beginAtZero: false,\n            },\n          },\n        ],\n      },\n      }\n    \n    // console.log('max', maxbidList_x)\n\n    return(\n        <Div>\n         <Line data = {maxs} options = {options} />\n        </Div>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport StateIcon from './Components/state';\nimport { AiFillBank } from 'react-icons/ai';\nimport HighLowAsk from './Components/high&lowAsk';\nimport HighLowBid from './Components/high&lowBid';\nimport HighAskBid from './Components/ask_bid_high';\nimport LowAskBid from './Components/ask_bid_low';\nimport './App.css';\n\n\nconst Div = styled.div`\n  margin          : 0;\n  padding         : 0;\n  height          : 100%;\n  width           : 100%;\n  min-height      : 1100px;\n  background-color: rgb(20, 21, 26)\n`\nconst H1 = styled.h1`\n    padding    : 12px 8px 0px 16px;\n    color      : #DCE3EF;\n    font-family: Optima;\n    text-align : center;\n    margin-top    : 0\n`\nconst ChartDiv = styled.div`\n  display              : grid;\n  grid-template-columns: [c-start] auto [c-line] auto [c-end];\n`\n\nfunction App() {\n  return (\n   \n    <Div>\n      <H1> <AiFillBank style = {{ width: '28px', height: '28px'}} /> Binance Case - Depth of BNB-BTC </H1>\n      <StateIcon />\n\n      <ChartDiv>\n        <HighLowAsk />\n        <HighLowBid />\n        <HighAskBid />\n        <LowAskBid />\n      </ChartDiv>\n      \n    </Div>\n   \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { Binance } from \"../Type\"\n\nexport const buildConnection = createAction('buildConnection')\nexport const connectSuccess  = createAction<Binance>('connectSuccess')\nexport const connectFail     = createAction<{}>('connectAction')","import { createReducer } from \"@reduxjs/toolkit\";\nimport { buildConnection, connectSuccess, connectFail} from './action'\nimport { Binance } from \"../Type\"\n\nconst initialState = {\n    status: false,\n    list  : [] as Binance[],   // origin data\n\n    asks        : [] as number[][],   //'a'\n    askPrice_max: [] as number[],\n    askPrice_min: [] as number[],\n\n    bids        : [] as number[][],   //'b'\n    bidPrice_max: [] as number[],\n    bidPrice_min: [] as number[],\n\n    eventTime: [] as string[],\n    errorMsg : ''\n}\n\nexport const webReducer =  createReducer(initialState, {\n    [buildConnection.type]: (state) => {\n        console.log('start connection')\n        return state;\n    },\n\n    [connectSuccess.type]: (state, action) => {\n            state.status = true\n        let p            = action.payload\n        // let date = new Date(p['E']).toLocaleString('en-US')\n        let date = new Date(p['E']).toLocaleTimeString('en-US')\n\n        // Ask\n        let all_ask: number[][] = p['a']\n        let valid_ask           = all_ask.filter( a => a[1] > 0)  // filter the asks with 0 quantity\n        let valid_ask_price     = []\n        for (let i = 0; i < valid_ask.length; i++) {\n            valid_ask_price.push(valid_ask[i][0]) // get all valid prices with asks\n        }\n        let max_ask_price = Math.max(...valid_ask_price)\n        let min_ask_price = Math.min(...valid_ask_price)\n\n        // Bid\n        let all_bid: number[][] = p['b']\n        let valid_bid           = all_bid.filter( b => b[1] > 0)  // filter the bids with 0 quantity\n        let valid_bid_price     = []\n        for (let i = 0; i < valid_bid.length; i++) {\n            valid_bid_price.push(valid_bid[i][0]) // get all valid prices with bids\n        }\n        let max_bid_price = Math.max(...valid_bid_price)\n        let min_bid_price = Math.min(...valid_bid_price)\n\n        if (state.list.length <= 60) {\n            state.list.push(action.payload)\n            state.asks.push(valid_ask[0])\n            state.bids.push(valid_bid[0])\n\n            state.eventTime.push(date) \n\n            state.askPrice_max.push(max_ask_price*1000)\n            state.askPrice_min.push(min_ask_price*1000)\n\n            state.bidPrice_max.push(max_bid_price*1000)\n            state.bidPrice_min.push(min_bid_price*1000)\n        }\n\n        else if (state.list.length > 60) {\n            state.list.splice(0, 1);\n            state.list.push(action.payload);\n\n            state.asks.splice(0,1);\n            state.asks.push(valid_ask[0])\n\n            state.bids.splice(0,1);\n            state.bids.push(valid_bid[0])\n\n            state.eventTime.splice(0,1);  \n            state.eventTime.push(date) \n\n            state.askPrice_max.splice(0,1);\n            state.askPrice_max.push(max_ask_price*1000);\n\n            state.askPrice_min.splice(0,1);\n            state.askPrice_min.push(min_ask_price*1000);\n\n            state.bidPrice_max.splice(0,1)\n            state.bidPrice_max.push(max_bid_price*1000)\n\n            state.bidPrice_min.splice(0,1)\n            state.bidPrice_min.push(min_bid_price*1000)\n\n        }\n        return state;\n    },\n\n    [connectFail.type]: (state, action) => {\n        state.errorMsg = action.payload;\n        state.status   = false;\n        return state;\n    },\n\n})","import { combineReducers } from '@reduxjs/toolkit'\nimport { webReducer } from './reducer'\n\nexport const rootReducer = combineReducers({\n    webReducer: webReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","import { configureStore } from \"@reduxjs/toolkit\";\nimport { webMiddleware } from \"./middleware\";\nimport { rootReducer } from \"./index\";\nimport { buildConnection } from \"./action\";\n\nconst store = configureStore({\n  reducer   : rootReducer,\n  middleware: [webMiddleware],\n});\n\nstore.dispatch(buildConnection());\n\nexport default store;\n","import { AnyAction, Middleware } from \"@reduxjs/toolkit\";\nimport { buildConnection, connectSuccess, connectFail} from './action'\n\nexport const webMiddleware: Middleware = (store: any) => (next: any) => (action: AnyAction) => {\n    const { type } = action;\n    const url      = 'wss://stream.binance.com:9443/ws/bnbbtc@depth';\n\n  \n    next(action);\n\n    if (type === buildConnection.toString()){\n        try {\n            const ws = new WebSocket(url);\n            console.log('ws', ws);\n\n            ws.onopen = () => {\n                console.log(\"connected\")\n            }\n            ws.onmessage = (e) => {\n                var data = JSON.parse(e.data)\n                store.dispatch(connectSuccess(data))\n                // console.log('onmessg', data, data['a'])\n            }\n            ws.onerror = (event) => {\n                console.log('error', event)\n                store.dispatch(connectFail(event))\n            }\n          \n            \n        } catch (error) {\n            console.log('error', error)\n        }\n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}